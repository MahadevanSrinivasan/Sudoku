% Sudoku Solver
% Attempt 1 - Simple solver
maxIter = 10;
problemSolved = 0;
%Easy Problem
Problem = [0 0 1 0 0 2 4 6 0; ...
           6 0 0 0 0 0 0 5 0; ...
           0 9 8 4 0 0 0 0 0; ...
           4 6 0 5 9 0 3 0 8; ...
           0 0 7 1 2 4 5 0 0; ...
           9 0 5 0 6 3 0 4 7; ...
           0 0 0 0 0 8 6 3 0; ...
           0 3 0 0 0 0 0 0 4; ...
           0 5 4 6 0 0 7 0 0]
%Difficult Problem    
% Problem = [8 0 1 5 0 0 0 0 0; ...
           % 0 9 0 0 0 0 0 8 0; ...
           % 0 0 0 0 0 0 0 1 4; ...
           % 7 1 0 0 0 0 0 2 0; ...
           % 0 0 3 0 6 7 1 9 0; ...
           % 0 0 9 0 1 0 7 4 3; ...
           % 0 0 0 1 7 4 0 0 9; ...
           % 1 0 4 0 0 0 8 0 0; ...
           % 9 5 0 0 3 0 4 0 1]
           
Solution = Problem;

cellDefinitions = [1:3,10:12,19:21; ...
                   28:30,37:39,46:48; ...
                   55:57,64:66,73:75; ...
                   4:6,13:15,22:24; ...
                   31:33,40:42,49:51; ...
                   58:60,67:69,76:78; ...
                   7:9,16:18,25:27; ...
                   34:36,43:45,52:54; ...
                   61:63,70:72,79:81];

allowedValues = 1:9;
% Loop through all non-zero elements and find the obvious based on rows and columns

for iter = 1 : maxIter
    fprintf('Iteration: %d\n',iter);
    [Solution, problemSolved] = SimpleIteration(Solution);
    if(problemSolved)
        disp('Problem Solved');
        break;
    end
end

if(problemSolved)
    Solution
else
    disp('Problem is not simple');
    Solution
end